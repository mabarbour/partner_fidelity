Generalized Linear Mixed-Effect Models (GLMMs) Tutorial
==========================================================
author: Matt Barbour
date: Oct. 18, 2017
width: 960
height: 700


Why Statistical Models?
=============================
- Want to measure or test the effect of factors on responses you are interested in
- Analyzing experimental or observational data


Arxhina's Question
========================================================

When two species co-occur, what determines their probability of interacting?
- **Type of Ecological Interaction**
- **Normalized Degree of each Species**
- **Statistical interactions** between Normalized Degree and Type of Ecological Interaction


Arxhina's Data
========================================================

- 4075 unique pairs of interactions

```{r, echo=FALSE}
library(tidyverse)

network.df <- read_csv("t_glmm_plus_connectance.csv") %>%
  mutate(network_id = as.factor(network_id),
         id_pair = as.factor(id_pair),
         type = as.factor(type))

aggregate.df <- network.df %>%
  group_by(id_pair, subtype, type, species_1, species_2) %>%
  summarise(co_occur = n(), 
            interactions = sum(connected), 
            mean_norm_deg_sp_1 = round(mean(normalized_degree_sp_1),2), 
            mean_norm_deg_sp_2 = round(mean(normalized_degree_sp_2),2)) %>%
  ungroup() %>%
  mutate(prop_interactions = round(interactions/co_occur,2),
         sc.mean_norm_deg_sp_1 = (mean_norm_deg_sp_1 - mean(mean_norm_deg_sp_1))/sd(mean_norm_deg_sp_1),
         sc.mean_norm_deg_sp_2 = (mean_norm_deg_sp_2 - mean(mean_norm_deg_sp_2))/sd(mean_norm_deg_sp_2))

agg.sub <- aggregate.df %>% sample_n(size = 10)

agg.sub %>% select(id_pair, prop_interactions, type)
```

Arxhina's Data
========================================================

- 4075 unique pairs of interactions
```{r, echo = FALSE}
agg.sub %>% select(subtype, Norm.Deg.Sp.1 = mean_norm_deg_sp_1, Norm.Deg.Sp.2 = mean_norm_deg_sp_2)
```

Possible Analysis
=========================
Analysis of Variance (ANOVA)
- Data points are independent (true for **ANY** statistical analysis)
- Residuals (error) are normally distributed
- Equality of variances


Explore the Data
=======================
- Is ANOVA okay?

```{r, echo = FALSE}
library(cowplot)

ggplot(aggregate.df, aes(x = mean_norm_deg_sp_1, y = prop_interactions, color = type)) + 
  geom_point(aes(size = co_occur), shape = 1) + geom_smooth(method = "lm") + 
  scale_y_continuous(name = "Probability of Interacting", breaks = c(0,0.25,0.5,0.75,1.0), labels = c(0,0.25,0.5,0.75,1.0)) +
  scale_x_continuous(name = "Avg. Normalized Degree of Sp. 1", breaks = c(0,0.25,0.5,0.75,1.0), labels = c(0,0.25,0.5,0.75,1.0))
```


Are unique pairwise interactions independent of each other?
===========================================================
- Many species occur in multiple interactions

```{r, echo = FALSE}
hist(table(aggregate.df$species_1), xlab = "Representation in Data", main = "Species 1")
```


Are unique pairwise interactions independent of each other?
===========================================================
- Bias toward Host-Parasite and Plant-Pollinator interactions

```{r, echo = FALSE}
plot(table(aggregate.df$subtype), ylab = "No. of Unique Interactions")
```

GLMMs to the Rescue 
===================

**Generalized Linear Models**
- Non-normal data okay (pick another error distribution)
```{r, echo = FALSE}
binomial_smooth <- function(...) {
  geom_smooth(method = "glm", method.args = list(family = "binomial"), ...)
}

ggplot(aggregate.df, aes(x = mean_norm_deg_sp_1, y = prop_interactions, color = type)) + 
  geom_point(aes(size = co_occur), shape = 1) + binomial_smooth(aes(weight = co_occur)) + 
  scale_y_continuous(name = "Probability of Interacting", breaks = c(0,0.25,0.5,0.75,1.0), labels = c(0,0.25,0.5,0.75,1.0)) +
  scale_x_continuous(name = "Avg. Normalized Degree of Sp. 1", breaks = c(0,0.25,0.5,0.75,1.0), labels = c(0,0.25,0.5,0.75,1.0)) +
  ggtitle("Binomial Distribution")
```


GLMMs to the Rescue 
===================

**Mixed-Effect Models**
- Account for non-independence in the data
- **Fixed-effects**: factors whose effects are experimentally determined, or whose interest lies in the specific effects of each level.
- **Random Effects**: factors whose levels are sampled from a larger population, or whose interest lies in the variation among them rather than the specific effects of each level.
- Status of particular levels depends on experimental design and context.
- No need to aggregate data


Mixed-Model Example
==================
- Fixed-effect: Type of Ecological Interaction
- Random-effect: Subtype
```{r, echo = FALSE}
binomial_smooth <- function(...) {
  geom_smooth(method = "glm", method.args = list(family = "binomial"), ...)
}

ggplot(aggregate.df, aes(x = mean_norm_deg_sp_1, y = prop_interactions, color = subtype)) + 
  geom_point(aes(size = co_occur), shape = 1) + binomial_smooth(aes(weight = co_occur)) + 
  scale_y_continuous(name = "Probability of Interacting", breaks = c(0,0.25,0.5,0.75,1.0), labels = c(0,0.25,0.5,0.75,1.0)) +
  scale_x_continuous(name = "Avg. Normalized Degree of Sp. 1", breaks = c(0,0.25,0.5,0.75,1.0), labels = c(0,0.25,0.5,0.75,1.0)) 
```


Another Example 
=========================
- Is using the mean for normalized degree informative?

```{r, echo = FALSE}
sub.sp1 <- network.df %>% select(species_1, network_id, normalized_degree_sp_1) %>% unique 
get.order <- sub.sp1 %>% group_by(species_1) %>% summarise(mean_norm_deg_sp_1 = mean(normalized_degree_sp_1)) %>% arrange(mean_norm_deg_sp_1)
sub.sp1$species_1 <- factor(sub.sp1$species_1, levels = get.order$species_1)

ggplot(sub.sp1, aes(x = species_1, y = normalized_degree_sp_1)) + geom_boxplot() + coord_flip()

```

Generalized Linear Mixed-Effect Model
=====================================

**Probability of Interaction** ~ 

  **Type** x **Norm_Deg_Sp_1** x **Norm_Deg_Sp_2** +
  
  (1 | **Subtype**) + (1 | **Sp_1 ID**) + (1 | **Sp_2 ID**) + 
  
  (1 | **Network ID**) + (1 | **Interaxn ID**)
  
- Model complexity requires a Bayesian approach
```{r, echo = FALSE} 
library(brms)
interaction.formula <- brmsformula(connected ~                                # probability of species interaction
                                     type*sc.norm_deg_sp_1*sc.norm_deg_sp_2 +   # 3-way interaction between type and normalized degree of each species
                                     (1 | network_id) +                       # allow probability of interaction to vary among networks
                                     (1 | subtype) +                          # allow probability of interaction to vary among interaction subtypes.
                                     (1 | species_1) +                        # allow probability of interaction to vary among resource species
                                     (1 | species_2) +                        # allow probability of interaction to vary among consumer species
                                     (1 | id_pair))                           # allow probability of interaction to vary among unique species interactions
```


How does a Bayesian approach help us fit a more complex model?
=============================================================
- Incorporate prior information
- But how do we choose a "good" prior?


Choosing Priors
================
*Have to think like the model*

- How does a 1 unit change in the predictor affect the log(odds) of an interaction? 

**Example**:
- Do mutualistic interactions *increase* or *decrease* the probability of an interaction?
- How big are these potential effects?


Example
=============
- pM = 0.75; pA = 0.25
- Model Coefficient = log(pM / (1-pM)) - log(pA / (1-pA))

```{r, echo = FALSE}
library(cowplot)
pM <- 0.75 # probability of a mutualistic interaction when two species co-occur 
pA <- 0.25 # probability of an antagonistic interaction when two species co-occur 
mu_mutualist <- log(pM / (1-pM)) - log(pA / (1-pA)) # logistic regression coefficient
samp <- 1000
sd_type <- data.frame(density = c(rnorm(samp, 0, 0.5),
                                  rnorm(samp, 0, 1),
                                  rnorm(samp, 0, 2),
                                  rnorm(samp, 0, 4)),
                      standard_deviation = c(rep("sd_0.5", samp),
                                             rep("sd_1", samp),
                                             rep("sd_2", samp),
                                             rep("sd_4", samp)))
ggplot(sd_type, aes(x = density, fill = standard_deviation)) + 
  geom_density(alpha = 0.5) + 
  geom_vline(xintercept = mu_mutualist, linetype = "dotted") # big effect
```

Run the Model
==============
- Summary Plots





